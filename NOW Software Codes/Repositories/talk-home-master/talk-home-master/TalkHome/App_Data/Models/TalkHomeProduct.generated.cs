//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Talk Home Product</summary>
	[PublishedContentModel("talkHomeProduct")]
	public partial class TalkHomeProduct : PublishedContentModel, IBanner, IMetaProperties, IRelatedFaqs, IRelatedOffers
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "talkHomeProduct";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TalkHomeProduct(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TalkHomeProduct, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Campaign: Select a campaign (if applicable).
		///</summary>
		[ImplementPropertyType("campaign")]
		public IPublishedContent Campaign
		{
			get { return this.GetPropertyValue<IPublishedContent>("campaign"); }
		}

		///<summary>
		/// Offers title: Enter the title for the "Offers" section.
		///</summary>
		[ImplementPropertyType("offersTitle")]
		public string OffersTitle
		{
			get { return this.GetPropertyValue<string>("offersTitle"); }
		}

		///<summary>
		/// Top products info: Enter the text for the into to the top products.
		///</summary>
		[ImplementPropertyType("topProductsInfo")]
		public IHtmlString TopProductsInfo
		{
			get { return this.GetPropertyValue<IHtmlString>("topProductsInfo"); }
		}

		///<summary>
		/// Top products link: Enter the link for the "Top products" section.
		///</summary>
		[ImplementPropertyType("topProductsLink")]
		public Umbraco.Web.Models.RelatedLinks TopProductsLink
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("topProductsLink"); }
		}

		///<summary>
		/// Top products title: Enter the title for the "Top products" section.
		///</summary>
		[ImplementPropertyType("topProductsTitle")]
		public IHtmlString TopProductsTitle
		{
			get { return this.GetPropertyValue<IHtmlString>("topProductsTitle"); }
		}

		///<summary>
		/// Top rates link: Enter the link for the "Top rates/minutes" section.
		///</summary>
		[ImplementPropertyType("topRatesLink")]
		public Umbraco.Web.Models.RelatedLinks TopRatesLink
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("topRatesLink"); }
		}

		///<summary>
		/// Top rates title: Enter the title for the "Top rates/minutes" section.
		///</summary>
		[ImplementPropertyType("topRatesTitle")]
		public string TopRatesTitle
		{
			get { return this.GetPropertyValue<string>("topRatesTitle"); }
		}

		///<summary>
		/// Description: Enter a description for the page header.
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return Umbraco.Web.PublishedContentModels.Banner.GetDescription(this); }
		}

		///<summary>
		/// Image: Upload and crop the image.
		///</summary>
		[ImplementPropertyType("image")]
		public Umbraco.Web.Models.ImageCropDataSet Image
		{
			get { return Umbraco.Web.PublishedContentModels.Banner.GetImage(this); }
		}

		///<summary>
		/// Primary link: Enter a link for the primary Call to action.
		///</summary>
		[ImplementPropertyType("primaryLink")]
		public Umbraco.Web.Models.RelatedLinks PrimaryLink
		{
			get { return Umbraco.Web.PublishedContentModels.Banner.GetPrimaryLink(this); }
		}

		///<summary>
		/// Secondary link: Enter a link for the secondary Call to action.
		///</summary>
		[ImplementPropertyType("secondaryLink")]
		public Umbraco.Web.Models.RelatedLinks SecondaryLink
		{
			get { return Umbraco.Web.PublishedContentModels.Banner.GetSecondaryLink(this); }
		}

		///<summary>
		/// Title: Enter the page title.
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return Umbraco.Web.PublishedContentModels.Banner.GetTitle(this); }
		}

		///<summary>
		/// Meta description: Enter the SEO description.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.MetaProperties.GetMetaDescription(this); }
		}

		///<summary>
		/// Meta image: Upload and crop the image for link previews.
		///</summary>
		[ImplementPropertyType("metaImage")]
		public Umbraco.Web.Models.ImageCropDataSet MetaImage
		{
			get { return Umbraco.Web.PublishedContentModels.MetaProperties.GetMetaImage(this); }
		}

		///<summary>
		/// Meta tags: Enter the SEO meta tags.
		///</summary>
		[ImplementPropertyType("metaTags")]
		public string MetaTags
		{
			get { return Umbraco.Web.PublishedContentModels.MetaProperties.GetMetaTags(this); }
		}

		///<summary>
		/// Meta title: Enter the {title} tag content.
		///</summary>
		[ImplementPropertyType("metaTitle")]
		public string MetaTitle
		{
			get { return Umbraco.Web.PublishedContentModels.MetaProperties.GetMetaTitle(this); }
		}

		///<summary>
		/// OG Description: Enter the Open Graph tag description.
		///</summary>
		[ImplementPropertyType("oGDescription")]
		public string OGdescription
		{
			get { return Umbraco.Web.PublishedContentModels.MetaProperties.GetOGdescription(this); }
		}

		///<summary>
		/// FAQ 1: Select the first FAQ.
		///</summary>
		[ImplementPropertyType("fAQ1")]
		public IPublishedContent FAq1
		{
			get { return Umbraco.Web.PublishedContentModels.RelatedFaqs.GetFAq1(this); }
		}

		///<summary>
		/// FAQ 2: Select the second FAQ.
		///</summary>
		[ImplementPropertyType("fAQ2")]
		public IPublishedContent FAq2
		{
			get { return Umbraco.Web.PublishedContentModels.RelatedFaqs.GetFAq2(this); }
		}

		///<summary>
		/// FAQ 3: Select the third FAQ.
		///</summary>
		[ImplementPropertyType("fAQ3")]
		public IPublishedContent FAq3
		{
			get { return Umbraco.Web.PublishedContentModels.RelatedFaqs.GetFAq3(this); }
		}

		///<summary>
		/// Offer 1: Select the first offer.
		///</summary>
		[ImplementPropertyType("offer1")]
		public IPublishedContent Offer1
		{
			get { return Umbraco.Web.PublishedContentModels.RelatedOffers.GetOffer1(this); }
		}

		///<summary>
		/// Offer 2: Select the second offer.
		///</summary>
		[ImplementPropertyType("offer2")]
		public IPublishedContent Offer2
		{
			get { return Umbraco.Web.PublishedContentModels.RelatedOffers.GetOffer2(this); }
		}

		///<summary>
		/// Offer 3: Select the third offer
		///</summary>
		[ImplementPropertyType("offer3")]
		public IPublishedContent Offer3
		{
			get { return Umbraco.Web.PublishedContentModels.RelatedOffers.GetOffer3(this); }
		}

		///<summary>
		/// Related Offers title: Enter the title.
		///</summary>
		[ImplementPropertyType("relatedOffersTitle")]
		public string RelatedOffersTitle
		{
			get { return Umbraco.Web.PublishedContentModels.RelatedOffers.GetRelatedOffersTitle(this); }
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1240 with alias "metaProperties"
	/// <summary>SEO tags</summary>
	public partial interface IMetaProperties : IPublishedContent
	{
		/// <summary>Meta description</summary>
		string MetaDescription { get; }

		/// <summary>Meta image</summary>
		Umbraco.Web.Models.ImageCropDataSet MetaImage { get; }

		/// <summary>Meta tags</summary>
		string MetaTags { get; }

		/// <summary>Meta title</summary>
		string MetaTitle { get; }

		/// <summary>OG Description</summary>
		string OGdescription { get; }
	}

	/// <summary>SEO tags</summary>
	[PublishedContentModel("metaProperties")]
	public partial class MetaProperties : PublishedContentModel, IMetaProperties
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "metaProperties";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MetaProperties(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MetaProperties, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Meta description: Enter the SEO description.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return GetMetaDescription(this); }
		}

		/// <summary>Static getter for Meta description</summary>
		public static string GetMetaDescription(IMetaProperties that) { return that.GetPropertyValue<string>("metaDescription"); }

		///<summary>
		/// Meta image: Upload and crop the image for link previews.
		///</summary>
		[ImplementPropertyType("metaImage")]
		public Umbraco.Web.Models.ImageCropDataSet MetaImage
		{
			get { return GetMetaImage(this); }
		}

		/// <summary>Static getter for Meta image</summary>
		public static Umbraco.Web.Models.ImageCropDataSet GetMetaImage(IMetaProperties that) { return that.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("metaImage"); }

		///<summary>
		/// Meta tags: Enter the SEO meta tags.
		///</summary>
		[ImplementPropertyType("metaTags")]
		public string MetaTags
		{
			get { return GetMetaTags(this); }
		}

		/// <summary>Static getter for Meta tags</summary>
		public static string GetMetaTags(IMetaProperties that) { return that.GetPropertyValue<string>("metaTags"); }

		///<summary>
		/// Meta title: Enter the {title} tag content.
		///</summary>
		[ImplementPropertyType("metaTitle")]
		public string MetaTitle
		{
			get { return GetMetaTitle(this); }
		}

		/// <summary>Static getter for Meta title</summary>
		public static string GetMetaTitle(IMetaProperties that) { return that.GetPropertyValue<string>("metaTitle"); }

		///<summary>
		/// OG Description: Enter the Open Graph tag description.
		///</summary>
		[ImplementPropertyType("oGDescription")]
		public string OGdescription
		{
			get { return GetOGdescription(this); }
		}

		/// <summary>Static getter for OG Description</summary>
		public static string GetOGdescription(IMetaProperties that) { return that.GetPropertyValue<string>("oGDescription"); }
	}
}

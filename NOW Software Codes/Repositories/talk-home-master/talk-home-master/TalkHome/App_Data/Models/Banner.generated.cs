//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1337 with alias "banner"
	/// <summary>Banner</summary>
	public partial interface IBanner : IPublishedContent
	{
		/// <summary>Description</summary>
		string Description { get; }

		/// <summary>Image</summary>
		Umbraco.Web.Models.ImageCropDataSet Image { get; }

		/// <summary>Primary link</summary>
		Umbraco.Web.Models.RelatedLinks PrimaryLink { get; }

		/// <summary>Secondary link</summary>
		Umbraco.Web.Models.RelatedLinks SecondaryLink { get; }

		/// <summary>Title</summary>
		string Title { get; }
	}

	/// <summary>Banner</summary>
	[PublishedContentModel("banner")]
	public partial class Banner : PublishedContentModel, IBanner
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "banner";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Banner(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Banner, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Description: Enter a description for the page header.
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return GetDescription(this); }
		}

		/// <summary>Static getter for Description</summary>
		public static string GetDescription(IBanner that) { return that.GetPropertyValue<string>("description"); }

		///<summary>
		/// Image: Upload and crop the image.
		///</summary>
		[ImplementPropertyType("image")]
		public Umbraco.Web.Models.ImageCropDataSet Image
		{
			get { return GetImage(this); }
		}

		/// <summary>Static getter for Image</summary>
		public static Umbraco.Web.Models.ImageCropDataSet GetImage(IBanner that) { return that.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("image"); }

		///<summary>
		/// Primary link: Enter a link for the primary Call to action.
		///</summary>
		[ImplementPropertyType("primaryLink")]
		public Umbraco.Web.Models.RelatedLinks PrimaryLink
		{
			get { return GetPrimaryLink(this); }
		}

		/// <summary>Static getter for Primary link</summary>
		public static Umbraco.Web.Models.RelatedLinks GetPrimaryLink(IBanner that) { return that.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("primaryLink"); }

		///<summary>
		/// Secondary link: Enter a link for the secondary Call to action.
		///</summary>
		[ImplementPropertyType("secondaryLink")]
		public Umbraco.Web.Models.RelatedLinks SecondaryLink
		{
			get { return GetSecondaryLink(this); }
		}

		/// <summary>Static getter for Secondary link</summary>
		public static Umbraco.Web.Models.RelatedLinks GetSecondaryLink(IBanner that) { return that.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("secondaryLink"); }

		///<summary>
		/// Title: Enter the page title.
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return GetTitle(this); }
		}

		/// <summary>Static getter for Title</summary>
		public static string GetTitle(IBanner that) { return that.GetPropertyValue<string>("title"); }
	}
}

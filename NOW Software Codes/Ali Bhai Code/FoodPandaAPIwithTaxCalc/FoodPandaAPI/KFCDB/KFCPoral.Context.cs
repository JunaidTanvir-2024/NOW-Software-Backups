//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KFCDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KFC_PortalEntities : DbContext
    {
        public KFC_PortalEntities()
            : base("name=KFC_PortalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DeliveryOrder> DeliveryOrders { get; set; }
        public virtual DbSet<DeliveryOrderDetail> DeliveryOrderDetails { get; set; }
        public virtual DbSet<DeliveryOrderTemp> DeliveryOrderTemps { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<FpAcknowledgementQueue> FpAcknowledgementQueues { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<foodPandaDeliveryBranch> foodPandaDeliveryBranches { get; set; }
        public virtual DbSet<FoodPandaPayload> FoodPandaPayloads { get; set; }
    
        public virtual ObjectResult<Nullable<long>> Proc_IsOrderExistByCIN_New(string cIN)
        {
            var cINParameter = cIN != null ?
                new ObjectParameter("CIN", cIN) :
                new ObjectParameter("CIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Proc_IsOrderExistByCIN_New", cINParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Proc_SaveFoodPandaOrderTemp_New(string onlineDeleiveryOrderID, string orderNo, string cIN, string branch, string paymentMode, Nullable<long> customerID, string amount, string deliveryAddress, string instruction, Nullable<bool> takeAway, string serviceCharges, string timeRequired, string orderThrough, string itemDetailArray, string regionID, string city, string website, string description, string onlineTransactionDetails, string isPickup, string lat, string lon, string orderType, string token)
        {
            var onlineDeleiveryOrderIDParameter = onlineDeleiveryOrderID != null ?
                new ObjectParameter("OnlineDeleiveryOrderID", onlineDeleiveryOrderID) :
                new ObjectParameter("OnlineDeleiveryOrderID", typeof(string));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var cINParameter = cIN != null ?
                new ObjectParameter("CIN", cIN) :
                new ObjectParameter("CIN", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var deliveryAddressParameter = deliveryAddress != null ?
                new ObjectParameter("DeliveryAddress", deliveryAddress) :
                new ObjectParameter("DeliveryAddress", typeof(string));
    
            var instructionParameter = instruction != null ?
                new ObjectParameter("Instruction", instruction) :
                new ObjectParameter("Instruction", typeof(string));
    
            var takeAwayParameter = takeAway.HasValue ?
                new ObjectParameter("takeAway", takeAway) :
                new ObjectParameter("takeAway", typeof(bool));
    
            var serviceChargesParameter = serviceCharges != null ?
                new ObjectParameter("ServiceCharges", serviceCharges) :
                new ObjectParameter("ServiceCharges", typeof(string));
    
            var timeRequiredParameter = timeRequired != null ?
                new ObjectParameter("timeRequired", timeRequired) :
                new ObjectParameter("timeRequired", typeof(string));
    
            var orderThroughParameter = orderThrough != null ?
                new ObjectParameter("OrderThrough", orderThrough) :
                new ObjectParameter("OrderThrough", typeof(string));
    
            var itemDetailArrayParameter = itemDetailArray != null ?
                new ObjectParameter("ItemDetailArray", itemDetailArray) :
                new ObjectParameter("ItemDetailArray", typeof(string));
    
            var regionIDParameter = regionID != null ?
                new ObjectParameter("regionID", regionID) :
                new ObjectParameter("regionID", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var onlineTransactionDetailsParameter = onlineTransactionDetails != null ?
                new ObjectParameter("onlineTransactionDetails", onlineTransactionDetails) :
                new ObjectParameter("onlineTransactionDetails", typeof(string));
    
            var isPickupParameter = isPickup != null ?
                new ObjectParameter("isPickup", isPickup) :
                new ObjectParameter("isPickup", typeof(string));
    
            var latParameter = lat != null ?
                new ObjectParameter("lat", lat) :
                new ObjectParameter("lat", typeof(string));
    
            var lonParameter = lon != null ?
                new ObjectParameter("lon", lon) :
                new ObjectParameter("lon", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Proc_SaveFoodPandaOrderTemp_New", onlineDeleiveryOrderIDParameter, orderNoParameter, cINParameter, branchParameter, paymentModeParameter, customerIDParameter, amountParameter, deliveryAddressParameter, instructionParameter, takeAwayParameter, serviceChargesParameter, timeRequiredParameter, orderThroughParameter, itemDetailArrayParameter, regionIDParameter, cityParameter, websiteParameter, descriptionParameter, onlineTransactionDetailsParameter, isPickupParameter, latParameter, lonParameter, orderTypeParameter, tokenParameter);
        }
    
        public virtual int Proc_SaveOrderDetailTemp(Nullable<long> orderID, Nullable<long> familyID, Nullable<long> menuItemID, Nullable<long> menuPrice, Nullable<long> quantity, Nullable<bool> isWithCheze, Nullable<bool> isFrenchFriesUpSize, Nullable<bool> isDrinkUpsize, Nullable<long> menuFamilyMeasureID, string barcode)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var familyIDParameter = familyID.HasValue ?
                new ObjectParameter("FamilyID", familyID) :
                new ObjectParameter("FamilyID", typeof(long));
    
            var menuItemIDParameter = menuItemID.HasValue ?
                new ObjectParameter("MenuItemID", menuItemID) :
                new ObjectParameter("MenuItemID", typeof(long));
    
            var menuPriceParameter = menuPrice.HasValue ?
                new ObjectParameter("MenuPrice", menuPrice) :
                new ObjectParameter("MenuPrice", typeof(long));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(long));
    
            var isWithChezeParameter = isWithCheze.HasValue ?
                new ObjectParameter("IsWithCheze", isWithCheze) :
                new ObjectParameter("IsWithCheze", typeof(bool));
    
            var isFrenchFriesUpSizeParameter = isFrenchFriesUpSize.HasValue ?
                new ObjectParameter("IsFrenchFriesUpSize", isFrenchFriesUpSize) :
                new ObjectParameter("IsFrenchFriesUpSize", typeof(bool));
    
            var isDrinkUpsizeParameter = isDrinkUpsize.HasValue ?
                new ObjectParameter("IsDrinkUpsize", isDrinkUpsize) :
                new ObjectParameter("IsDrinkUpsize", typeof(bool));
    
            var menuFamilyMeasureIDParameter = menuFamilyMeasureID.HasValue ?
                new ObjectParameter("MenuFamilyMeasureID", menuFamilyMeasureID) :
                new ObjectParameter("MenuFamilyMeasureID", typeof(long));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_SaveOrderDetailTemp", orderIDParameter, familyIDParameter, menuItemIDParameter, menuPriceParameter, quantityParameter, isWithChezeParameter, isFrenchFriesUpSizeParameter, isDrinkUpsizeParameter, menuFamilyMeasureIDParameter, barcodeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> proc_InsertCustomerTemp(string address, string firstName, string phone1, string phone2, string loyalityCardNumber, string email, string accountNumber)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("Phone2", phone2) :
                new ObjectParameter("Phone2", typeof(string));
    
            var loyalityCardNumberParameter = loyalityCardNumber != null ?
                new ObjectParameter("LoyalityCardNumber", loyalityCardNumber) :
                new ObjectParameter("LoyalityCardNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("proc_InsertCustomerTemp", addressParameter, firstNameParameter, phone1Parameter, phone2Parameter, loyalityCardNumberParameter, emailParameter, accountNumberParameter);
        }
    
        public virtual int Proc_addDynamicPosQueue(string apiName, string deliveryOrderID, string statusId, string paymentMode, string creditMode)
        {
            var apiNameParameter = apiName != null ?
                new ObjectParameter("apiName", apiName) :
                new ObjectParameter("apiName", typeof(string));
    
            var deliveryOrderIDParameter = deliveryOrderID != null ?
                new ObjectParameter("DeliveryOrderID", deliveryOrderID) :
                new ObjectParameter("DeliveryOrderID", typeof(string));
    
            var statusIdParameter = statusId != null ?
                new ObjectParameter("statusId", statusId) :
                new ObjectParameter("statusId", typeof(string));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("paymentMode", paymentMode) :
                new ObjectParameter("paymentMode", typeof(string));
    
            var creditModeParameter = creditMode != null ?
                new ObjectParameter("creditMode", creditMode) :
                new ObjectParameter("creditMode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_addDynamicPosQueue", apiNameParameter, deliveryOrderIDParameter, statusIdParameter, paymentModeParameter, creditModeParameter);
        }
    
        public virtual int Proc_LogFPAPICall(string aPILink, string requestJson, string requestResponse, string statusDescription, Nullable<System.DateTime> aPICallStartTime, Nullable<System.DateTime> aPICallEndTime, string processTime, string apiType)
        {
            var aPILinkParameter = aPILink != null ?
                new ObjectParameter("APILink", aPILink) :
                new ObjectParameter("APILink", typeof(string));
    
            var requestJsonParameter = requestJson != null ?
                new ObjectParameter("RequestJson", requestJson) :
                new ObjectParameter("RequestJson", typeof(string));
    
            var requestResponseParameter = requestResponse != null ?
                new ObjectParameter("RequestResponse", requestResponse) :
                new ObjectParameter("RequestResponse", typeof(string));
    
            var statusDescriptionParameter = statusDescription != null ?
                new ObjectParameter("StatusDescription", statusDescription) :
                new ObjectParameter("StatusDescription", typeof(string));
    
            var aPICallStartTimeParameter = aPICallStartTime.HasValue ?
                new ObjectParameter("APICallStartTime", aPICallStartTime) :
                new ObjectParameter("APICallStartTime", typeof(System.DateTime));
    
            var aPICallEndTimeParameter = aPICallEndTime.HasValue ?
                new ObjectParameter("APICallEndTime", aPICallEndTime) :
                new ObjectParameter("APICallEndTime", typeof(System.DateTime));
    
            var processTimeParameter = processTime != null ?
                new ObjectParameter("ProcessTime", processTime) :
                new ObjectParameter("ProcessTime", typeof(string));
    
            var apiTypeParameter = apiType != null ?
                new ObjectParameter("apiType", apiType) :
                new ObjectParameter("apiType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_LogFPAPICall", aPILinkParameter, requestJsonParameter, requestResponseParameter, statusDescriptionParameter, aPICallStartTimeParameter, aPICallEndTimeParameter, processTimeParameter, apiTypeParameter);
        }
    
        public virtual int Proc_ReceiveFoodPandaOrderOnBranch(Nullable<long> deliveryOrderId)
        {
            var deliveryOrderIdParameter = deliveryOrderId.HasValue ?
                new ObjectParameter("DeliveryOrderId", deliveryOrderId) :
                new ObjectParameter("DeliveryOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ReceiveFoodPandaOrderOnBranch", deliveryOrderIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Proc_SaveFoodPandaOrderTemp_New_One(string onlineDeleiveryOrderID, string orderNo, string cIN, string branch, string paymentMode, Nullable<long> customerID, string amount, string deliveryAddress, string instruction, Nullable<bool> takeAway, string serviceCharges, string timeRequired, string orderThrough, string itemDetailArray, string regionID, string city, string website, string description, string onlineTransactionDetails, string isPickup, string lat, string lon, string orderType, string token)
        {
            var onlineDeleiveryOrderIDParameter = onlineDeleiveryOrderID != null ?
                new ObjectParameter("OnlineDeleiveryOrderID", onlineDeleiveryOrderID) :
                new ObjectParameter("OnlineDeleiveryOrderID", typeof(string));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var cINParameter = cIN != null ?
                new ObjectParameter("CIN", cIN) :
                new ObjectParameter("CIN", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var deliveryAddressParameter = deliveryAddress != null ?
                new ObjectParameter("DeliveryAddress", deliveryAddress) :
                new ObjectParameter("DeliveryAddress", typeof(string));
    
            var instructionParameter = instruction != null ?
                new ObjectParameter("Instruction", instruction) :
                new ObjectParameter("Instruction", typeof(string));
    
            var takeAwayParameter = takeAway.HasValue ?
                new ObjectParameter("takeAway", takeAway) :
                new ObjectParameter("takeAway", typeof(bool));
    
            var serviceChargesParameter = serviceCharges != null ?
                new ObjectParameter("ServiceCharges", serviceCharges) :
                new ObjectParameter("ServiceCharges", typeof(string));
    
            var timeRequiredParameter = timeRequired != null ?
                new ObjectParameter("timeRequired", timeRequired) :
                new ObjectParameter("timeRequired", typeof(string));
    
            var orderThroughParameter = orderThrough != null ?
                new ObjectParameter("OrderThrough", orderThrough) :
                new ObjectParameter("OrderThrough", typeof(string));
    
            var itemDetailArrayParameter = itemDetailArray != null ?
                new ObjectParameter("ItemDetailArray", itemDetailArray) :
                new ObjectParameter("ItemDetailArray", typeof(string));
    
            var regionIDParameter = regionID != null ?
                new ObjectParameter("regionID", regionID) :
                new ObjectParameter("regionID", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var onlineTransactionDetailsParameter = onlineTransactionDetails != null ?
                new ObjectParameter("onlineTransactionDetails", onlineTransactionDetails) :
                new ObjectParameter("onlineTransactionDetails", typeof(string));
    
            var isPickupParameter = isPickup != null ?
                new ObjectParameter("isPickup", isPickup) :
                new ObjectParameter("isPickup", typeof(string));
    
            var latParameter = lat != null ?
                new ObjectParameter("lat", lat) :
                new ObjectParameter("lat", typeof(string));
    
            var lonParameter = lon != null ?
                new ObjectParameter("lon", lon) :
                new ObjectParameter("lon", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Proc_SaveFoodPandaOrderTemp_New_One", onlineDeleiveryOrderIDParameter, orderNoParameter, cINParameter, branchParameter, paymentModeParameter, customerIDParameter, amountParameter, deliveryAddressParameter, instructionParameter, takeAwayParameter, serviceChargesParameter, timeRequiredParameter, orderThroughParameter, itemDetailArrayParameter, regionIDParameter, cityParameter, websiteParameter, descriptionParameter, onlineTransactionDetailsParameter, isPickupParameter, latParameter, lonParameter, orderTypeParameter, tokenParameter);
        }
    
        public virtual int Proc_SaveOrderDetailTemp_FP(Nullable<long> orderID, Nullable<long> familyID, Nullable<long> menuItemID, Nullable<long> menuPrice, Nullable<long> quantity, Nullable<bool> isWithCheze, Nullable<bool> isFrenchFriesUpSize, Nullable<bool> isDrinkUpsize, Nullable<long> menuFamilyMeasureID, string barcode, string instruction)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var familyIDParameter = familyID.HasValue ?
                new ObjectParameter("FamilyID", familyID) :
                new ObjectParameter("FamilyID", typeof(long));
    
            var menuItemIDParameter = menuItemID.HasValue ?
                new ObjectParameter("MenuItemID", menuItemID) :
                new ObjectParameter("MenuItemID", typeof(long));
    
            var menuPriceParameter = menuPrice.HasValue ?
                new ObjectParameter("MenuPrice", menuPrice) :
                new ObjectParameter("MenuPrice", typeof(long));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(long));
    
            var isWithChezeParameter = isWithCheze.HasValue ?
                new ObjectParameter("IsWithCheze", isWithCheze) :
                new ObjectParameter("IsWithCheze", typeof(bool));
    
            var isFrenchFriesUpSizeParameter = isFrenchFriesUpSize.HasValue ?
                new ObjectParameter("IsFrenchFriesUpSize", isFrenchFriesUpSize) :
                new ObjectParameter("IsFrenchFriesUpSize", typeof(bool));
    
            var isDrinkUpsizeParameter = isDrinkUpsize.HasValue ?
                new ObjectParameter("IsDrinkUpsize", isDrinkUpsize) :
                new ObjectParameter("IsDrinkUpsize", typeof(bool));
    
            var menuFamilyMeasureIDParameter = menuFamilyMeasureID.HasValue ?
                new ObjectParameter("MenuFamilyMeasureID", menuFamilyMeasureID) :
                new ObjectParameter("MenuFamilyMeasureID", typeof(long));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var instructionParameter = instruction != null ?
                new ObjectParameter("Instruction", instruction) :
                new ObjectParameter("Instruction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_SaveOrderDetailTemp_FP", orderIDParameter, familyIDParameter, menuItemIDParameter, menuPriceParameter, quantityParameter, isWithChezeParameter, isFrenchFriesUpSizeParameter, isDrinkUpsizeParameter, menuFamilyMeasureIDParameter, barcodeParameter, instructionParameter);
        }
    
        public virtual ObjectResult<Proc_getAPI_forTax_Result> Proc_getAPI_forTax()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_getAPI_forTax_Result>("Proc_getAPI_forTax");
        }
    
        public virtual ObjectResult<proc_getBranchDetailsbyIDforSimplex_Result> proc_getBranchDetailsbyIDforSimplex(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_getBranchDetailsbyIDforSimplex_Result>("proc_getBranchDetailsbyIDforSimplex", idParameter);
        }
    
        public virtual ObjectResult<Proc_getOrderDetail_Result> Proc_getOrderDetail(string orderID)
        {
            var orderIDParameter = orderID != null ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_getOrderDetail_Result>("Proc_getOrderDetail", orderIDParameter);
        }
    
        public virtual int Proc_insertFBRActivityLog(string data, string response)
        {
            var dataParameter = data != null ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(string));
    
            var responseParameter = response != null ?
                new ObjectParameter("Response", response) :
                new ObjectParameter("Response", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_insertFBRActivityLog", dataParameter, responseParameter);
        }
    
        public virtual int Proc_insertFBRInvoiceNumber(string orderID, string invoiceNo, string invoiceType)
        {
            var orderIDParameter = orderID != null ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var invoiceTypeParameter = invoiceType != null ?
                new ObjectParameter("InvoiceType", invoiceType) :
                new ObjectParameter("InvoiceType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_insertFBRInvoiceNumber", orderIDParameter, invoiceNoParameter, invoiceTypeParameter);
        }
    
        public virtual int Proc_insertFBRNewOrderDetails(Nullable<long> orderID, Nullable<long> taxPercentageFBR, Nullable<long> taxAmountFBR, Nullable<long> totalAmountExclusiveofTaxFBR, Nullable<long> totalDiscountFBR, Nullable<long> totalTaxCharged, Nullable<long> serviceChargesCreditOrders, Nullable<long> serviceChargesExclusiveofTax, Nullable<long> serviceChargesTaxCharged)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var taxPercentageFBRParameter = taxPercentageFBR.HasValue ?
                new ObjectParameter("TaxPercentageFBR", taxPercentageFBR) :
                new ObjectParameter("TaxPercentageFBR", typeof(long));
    
            var taxAmountFBRParameter = taxAmountFBR.HasValue ?
                new ObjectParameter("TaxAmountFBR", taxAmountFBR) :
                new ObjectParameter("TaxAmountFBR", typeof(long));
    
            var totalAmountExclusiveofTaxFBRParameter = totalAmountExclusiveofTaxFBR.HasValue ?
                new ObjectParameter("TotalAmountExclusiveofTaxFBR", totalAmountExclusiveofTaxFBR) :
                new ObjectParameter("TotalAmountExclusiveofTaxFBR", typeof(long));
    
            var totalDiscountFBRParameter = totalDiscountFBR.HasValue ?
                new ObjectParameter("TotalDiscountFBR", totalDiscountFBR) :
                new ObjectParameter("TotalDiscountFBR", typeof(long));
    
            var totalTaxChargedParameter = totalTaxCharged.HasValue ?
                new ObjectParameter("TotalTaxCharged", totalTaxCharged) :
                new ObjectParameter("TotalTaxCharged", typeof(long));
    
            var serviceChargesCreditOrdersParameter = serviceChargesCreditOrders.HasValue ?
                new ObjectParameter("ServiceChargesCreditOrders", serviceChargesCreditOrders) :
                new ObjectParameter("ServiceChargesCreditOrders", typeof(long));
    
            var serviceChargesExclusiveofTaxParameter = serviceChargesExclusiveofTax.HasValue ?
                new ObjectParameter("ServiceChargesExclusiveofTax", serviceChargesExclusiveofTax) :
                new ObjectParameter("ServiceChargesExclusiveofTax", typeof(long));
    
            var serviceChargesTaxChargedParameter = serviceChargesTaxCharged.HasValue ?
                new ObjectParameter("ServiceChargesTaxCharged", serviceChargesTaxCharged) :
                new ObjectParameter("ServiceChargesTaxCharged", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_insertFBRNewOrderDetails", orderIDParameter, taxPercentageFBRParameter, taxAmountFBRParameter, totalAmountExclusiveofTaxFBRParameter, totalDiscountFBRParameter, totalTaxChargedParameter, serviceChargesCreditOrdersParameter, serviceChargesExclusiveofTaxParameter, serviceChargesTaxChargedParameter);
        }
    
        public virtual int Proc_updateOrderDetailsforItemTaxDetails(Nullable<long> deliveryOrderDetailID, Nullable<long> itemSaleValue, Nullable<long> itemTotalAmount, Nullable<long> itemTaxCharged, Nullable<long> taxRateItem)
        {
            var deliveryOrderDetailIDParameter = deliveryOrderDetailID.HasValue ?
                new ObjectParameter("DeliveryOrderDetailID", deliveryOrderDetailID) :
                new ObjectParameter("DeliveryOrderDetailID", typeof(long));
    
            var itemSaleValueParameter = itemSaleValue.HasValue ?
                new ObjectParameter("ItemSaleValue", itemSaleValue) :
                new ObjectParameter("ItemSaleValue", typeof(long));
    
            var itemTotalAmountParameter = itemTotalAmount.HasValue ?
                new ObjectParameter("ItemTotalAmount", itemTotalAmount) :
                new ObjectParameter("ItemTotalAmount", typeof(long));
    
            var itemTaxChargedParameter = itemTaxCharged.HasValue ?
                new ObjectParameter("ItemTaxCharged", itemTaxCharged) :
                new ObjectParameter("ItemTaxCharged", typeof(long));
    
            var taxRateItemParameter = taxRateItem.HasValue ?
                new ObjectParameter("TaxRateItem", taxRateItem) :
                new ObjectParameter("TaxRateItem", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_updateOrderDetailsforItemTaxDetails", deliveryOrderDetailIDParameter, itemSaleValueParameter, itemTotalAmountParameter, itemTaxChargedParameter, taxRateItemParameter);
        }
    }
}
